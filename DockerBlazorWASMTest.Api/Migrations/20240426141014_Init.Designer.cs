// <auto-generated />
using System;
using DockerBlazorWASMTest.Api;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DockerBlazorWASMTest.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240426141014_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DockerBlazorWASMTest.Api.WeatherForecast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TemperatureC")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WeatherForecasts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateOnly(2024, 4, 27),
                            Summary = "Bracing",
                            TemperatureC = -19
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateOnly(2024, 4, 27),
                            Summary = "Freezing",
                            TemperatureC = 11
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateOnly(2024, 4, 27),
                            Summary = "Scorching",
                            TemperatureC = 30
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateOnly(2024, 4, 27),
                            Summary = "Cool",
                            TemperatureC = 28
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateOnly(2024, 4, 27),
                            Summary = "Hot",
                            TemperatureC = 36
                        },
                        new
                        {
                            Id = 6,
                            Date = new DateOnly(2024, 4, 27),
                            Summary = "Hot",
                            TemperatureC = 26
                        },
                        new
                        {
                            Id = 7,
                            Date = new DateOnly(2024, 4, 27),
                            Summary = "Hot",
                            TemperatureC = 34
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
